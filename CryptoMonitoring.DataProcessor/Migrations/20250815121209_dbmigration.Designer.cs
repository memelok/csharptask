// <auto-generated />
using System;
using CryptoMonitoring.DataProcessor.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CryptoMonitoring.DataProcessor.Migrations
{
    [DbContext(typeof(PostgresDbContext))]
    [Migration("20250815121209_dbmigration")]
    partial class dbmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CryptoMonitoring.DataProcessor.Models.EnrichedMarket", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("Id");

                    b.Property<double>("Change24h")
                        .HasColumnType("double precision")
                        .HasColumnName("Change24h")
                        .HasAnnotation("Relational:JsonPropertyName", "price_change_percentage_24h");

                    b.Property<decimal>("CurrentPrice")
                        .HasColumnType("numeric")
                        .HasColumnName("CurrentPrice")
                        .HasAnnotation("Relational:JsonPropertyName", "current_price");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<decimal?>("ResistanceLevel")
                        .HasColumnType("numeric")
                        .HasColumnName("ResistanceLevel");

                    b.Property<decimal?>("Sma21")
                        .HasColumnType("numeric")
                        .HasColumnName("Sma21");

                    b.Property<decimal?>("Sma7")
                        .HasColumnType("numeric")
                        .HasColumnName("Sma7");

                    b.Property<decimal?>("SupportLevel")
                        .HasColumnType("numeric")
                        .HasColumnName("SupportLevel");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Symbol")
                        .HasAnnotation("Relational:JsonPropertyName", "symbol");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Timestamp");

                    b.Property<double?>("Volatility")
                        .HasColumnType("double precision")
                        .HasColumnName("Volatility");

                    b.HasKey("Id");

                    b.ToTable("Snapshots", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
